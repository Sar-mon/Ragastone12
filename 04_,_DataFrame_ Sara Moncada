{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Sar-mon/Ragastone12/blob/main/04_%2C_DataFrame_%20Sara%20Moncada\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **0. Libreries**"
      ],
      "metadata": {
        "id": "pHDoSmrKbCuq"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "cRIuo_n4a1V5"
      },
      "outputs": [],
      "source": [
        "import pandas as pd    ## Manage the data base\n",
        "import numpy as np     ## Algebraic operations\n",
        "import plotly.express as px    ## Graphics"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **1. Import the dataset**"
      ],
      "metadata": {
        "id": "_nOfXECsb2nQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Save the file path\n",
        "p = \"/content/sample_data/Data_Sara_DV.xlsx\"\n",
        "\n",
        "# Read and save the dataset\n",
        "d = pd.read_excel(p)"
      ],
      "metadata": {
        "id": "OB7MZE49b_Bt"
      },
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **2. Basic Dataframe exploration**"
      ],
      "metadata": {
        "id": "avsKvAP0ebfK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Revizar la informaci√≥n general del dataframe\n",
        "\n",
        "d.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bGxnz-nRei1d",
        "outputId": "dc3eb619-d04d-4c1a-b73e-5b801ef875c9"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 236 entries, 0 to 235\n",
            "Data columns (total 8 columns):\n",
            " #   Column                                                                                Non-Null Count  Dtype  \n",
            "---  ------                                                                                --------------  -----  \n",
            " 0   Country Name                                                                          233 non-null    object \n",
            " 1   Country Code                                                                          231 non-null    object \n",
            " 2   Time                                                                                  231 non-null    float64\n",
            " 3   Time Code                                                                             231 non-null    object \n",
            " 4   GDP growth (annual %) [NY.GDP.MKTP.KD.ZG]                                             231 non-null    object \n",
            " 5   Trade (% of GDP) [NE.TRD.GNFS.ZS]                                                     231 non-null    object \n",
            " 6   Net migration [SM.POP.NETM]                                                           231 non-null    float64\n",
            " 7   Unemployment, total (% of total labor force) (national estimate) [SL.UEM.TOTL.NE.ZS]  231 non-null    object \n",
            "dtypes: float64(2), object(6)\n",
            "memory usage: 14.9+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# View the first 5 rows (Muesta las primeras 5 filas del dataset, dentro del parentesis se puede poner el numero de filas para visualizar)\n",
        "\n",
        "d.head(5)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 382
        },
        "id": "QUzJP4cKgP30",
        "outputId": "28963b39-0adc-471f-8aa0-ffb09bfe9e55"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Country Name Country Code    Time Time Code  \\\n",
              "0   Costa Rica          CRI  2013.0    YR2013   \n",
              "1   Costa Rica          CRI  2014.0    YR2014   \n",
              "2   Costa Rica          CRI  2015.0    YR2015   \n",
              "3   Costa Rica          CRI  2016.0    YR2016   \n",
              "4   Costa Rica          CRI  2017.0    YR2017   \n",
              "\n",
              "  GDP growth (annual %) [NY.GDP.MKTP.KD.ZG] Trade (% of GDP) [NE.TRD.GNFS.ZS]  \\\n",
              "0                                  2.494766                         64.066411   \n",
              "1                                   3.54211                         65.191242   \n",
              "2                                  3.652081                         60.753562   \n",
              "3                                  4.204323                         62.178478   \n",
              "4                                  4.157699                         65.071954   \n",
              "\n",
              "   Net migration [SM.POP.NETM]  \\\n",
              "0                       3950.0   \n",
              "1                       3996.0   \n",
              "2                       4065.0   \n",
              "3                       4150.0   \n",
              "4                       4196.0   \n",
              "\n",
              "  Unemployment, total (% of total labor force) (national estimate) [SL.UEM.TOTL.NE.ZS]  \n",
              "0                                              8.218                                    \n",
              "1                                              8.499                                    \n",
              "2                                              8.415                                    \n",
              "3                                              8.085                                    \n",
              "4                                              7.729                                    "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-048ec888-f108-4d59-8562-1fe21a7f461c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Country Name</th>\n",
              "      <th>Country Code</th>\n",
              "      <th>Time</th>\n",
              "      <th>Time Code</th>\n",
              "      <th>GDP growth (annual %) [NY.GDP.MKTP.KD.ZG]</th>\n",
              "      <th>Trade (% of GDP) [NE.TRD.GNFS.ZS]</th>\n",
              "      <th>Net migration [SM.POP.NETM]</th>\n",
              "      <th>Unemployment, total (% of total labor force) (national estimate) [SL.UEM.TOTL.NE.ZS]</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Costa Rica</td>\n",
              "      <td>CRI</td>\n",
              "      <td>2013.0</td>\n",
              "      <td>YR2013</td>\n",
              "      <td>2.494766</td>\n",
              "      <td>64.066411</td>\n",
              "      <td>3950.0</td>\n",
              "      <td>8.218</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Costa Rica</td>\n",
              "      <td>CRI</td>\n",
              "      <td>2014.0</td>\n",
              "      <td>YR2014</td>\n",
              "      <td>3.54211</td>\n",
              "      <td>65.191242</td>\n",
              "      <td>3996.0</td>\n",
              "      <td>8.499</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Costa Rica</td>\n",
              "      <td>CRI</td>\n",
              "      <td>2015.0</td>\n",
              "      <td>YR2015</td>\n",
              "      <td>3.652081</td>\n",
              "      <td>60.753562</td>\n",
              "      <td>4065.0</td>\n",
              "      <td>8.415</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Costa Rica</td>\n",
              "      <td>CRI</td>\n",
              "      <td>2016.0</td>\n",
              "      <td>YR2016</td>\n",
              "      <td>4.204323</td>\n",
              "      <td>62.178478</td>\n",
              "      <td>4150.0</td>\n",
              "      <td>8.085</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Costa Rica</td>\n",
              "      <td>CRI</td>\n",
              "      <td>2017.0</td>\n",
              "      <td>YR2017</td>\n",
              "      <td>4.157699</td>\n",
              "      <td>65.071954</td>\n",
              "      <td>4196.0</td>\n",
              "      <td>7.729</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-048ec888-f108-4d59-8562-1fe21a7f461c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-048ec888-f108-4d59-8562-1fe21a7f461c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-048ec888-f108-4d59-8562-1fe21a7f461c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6a09b213-f66f-4619-98ec-cce36777f598\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6a09b213-f66f-4619-98ec-cce36777f598')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6a09b213-f66f-4619-98ec-cce36777f598 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "d",
              "summary": "{\n  \"name\": \"d\",\n  \"rows\": 236,\n  \"fields\": [\n    {\n      \"column\": \"Country Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 23,\n        \"samples\": [\n          \"Jamaica\",\n          \"Cuba\",\n          \"Costa Rica\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Country Code\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 21,\n        \"samples\": [\n          \"CRI\",\n          \"LCA\",\n          \"JAM\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Time\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.1691447207203343,\n        \"min\": 2013.0,\n        \"max\": 2023.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          2018.0,\n          2013.0,\n          2022.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Time Code\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"YR2018\",\n          \"YR2013\",\n          \"YR2022\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GDP growth (annual %) [NY.GDP.MKTP.KD.ZG]\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 231,\n        \"samples\": [\n          7.159832865734899,\n          4.437643836767762,\n          4.5514917795839835\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Trade (% of GDP) [NE.TRD.GNFS.ZS]\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 142,\n        \"samples\": [\n          34.457201906164194,\n          81.84507598007653,\n          130.65515265941914\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Net migration [SM.POP.NETM]\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15408.88898002693,\n        \"min\": -58095.0,\n        \"max\": 35502.0,\n        \"num_unique_values\": 163,\n        \"samples\": [\n          -90.0,\n          30080.0,\n          -11329.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unemployment, total (% of total labor force) (national estimate) [SL.UEM.TOTL.NE.ZS]\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 128,\n        \"samples\": [\n          5.313,\n          10.983,\n          4.327\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# View the last 5 rows (Muestra las ultimas 5 filas del dataframe)\n",
        "\n",
        "d.tail(15)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 886
        },
        "id": "ccLY2jGWhUYk",
        "outputId": "7d69d5b2-e00e-4e69-bddc-a2383d76eac5"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                              country country_code    year  \\\n",
              "221                               Trinidad and Tobago          TTO  2014.0   \n",
              "222                               Trinidad and Tobago          TTO  2015.0   \n",
              "223                               Trinidad and Tobago          TTO  2016.0   \n",
              "224                               Trinidad and Tobago          TTO  2017.0   \n",
              "225                               Trinidad and Tobago          TTO  2018.0   \n",
              "226                               Trinidad and Tobago          TTO  2019.0   \n",
              "227                               Trinidad and Tobago          TTO  2020.0   \n",
              "228                               Trinidad and Tobago          TTO  2021.0   \n",
              "229                               Trinidad and Tobago          TTO  2022.0   \n",
              "230                               Trinidad and Tobago          TTO  2023.0   \n",
              "231                                               NaN          NaN     NaN   \n",
              "232                                               NaN          NaN     NaN   \n",
              "233                                               NaN          NaN     NaN   \n",
              "234  Data from database: World Development Indicators          NaN     NaN   \n",
              "235                          Last Updated: 09/19/2024          NaN     NaN   \n",
              "\n",
              "    time_code GDP growth (annual %) [NY.GDP.MKTP.KD.ZG]  \\\n",
              "221    YR2014                                  3.853635   \n",
              "222    YR2015                                  -0.77746   \n",
              "223    YR2016                                 -7.527137   \n",
              "224    YR2017                                 -4.800828   \n",
              "225    YR2018                                 -0.602465   \n",
              "226    YR2019                                  0.361272   \n",
              "227    YR2020                                 -9.077877   \n",
              "228    YR2021                                 -1.037426   \n",
              "229    YR2022                                  1.482235   \n",
              "230    YR2023                                  2.103245   \n",
              "231       NaN                                       NaN   \n",
              "232       NaN                                       NaN   \n",
              "233       NaN                                       NaN   \n",
              "234       NaN                                       NaN   \n",
              "235       NaN                                       NaN   \n",
              "\n",
              "    Trade (% of GDP) [NE.TRD.GNFS.ZS]  Net migration [SM.POP.NETM]  \\\n",
              "221                                ..                       -799.0   \n",
              "222                                ..                       -583.0   \n",
              "223                                ..                       -103.0   \n",
              "224                                ..                       1446.0   \n",
              "225                                ..                      35502.0   \n",
              "226                                ..                     -19248.0   \n",
              "227                                ..                       2370.0   \n",
              "228                                ..                       2632.0   \n",
              "229                                ..                       -800.0   \n",
              "230                                ..                       -800.0   \n",
              "231                               NaN                          NaN   \n",
              "232                               NaN                          NaN   \n",
              "233                               NaN                          NaN   \n",
              "234                               NaN                          NaN   \n",
              "235                               NaN                          NaN   \n",
              "\n",
              "    Unemployment, total (% of total labor force) (national estimate) [SL.UEM.TOTL.NE.ZS]  \n",
              "221                                              2.477                                    \n",
              "222                                              2.428                                    \n",
              "223                                              3.207                                    \n",
              "224                                                 ..                                    \n",
              "225                                                 ..                                    \n",
              "226                                              3.523                                    \n",
              "227                                              4.206                                    \n",
              "228                                              4.446                                    \n",
              "229                                              4.383                                    \n",
              "230                                                 ..                                    \n",
              "231                                                NaN                                    \n",
              "232                                                NaN                                    \n",
              "233                                                NaN                                    \n",
              "234                                                NaN                                    \n",
              "235                                                NaN                                    "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-00bd5c7b-0f6c-4c03-9f3f-e3b3b6cec66e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>country</th>\n",
              "      <th>country_code</th>\n",
              "      <th>year</th>\n",
              "      <th>time_code</th>\n",
              "      <th>GDP growth (annual %) [NY.GDP.MKTP.KD.ZG]</th>\n",
              "      <th>Trade (% of GDP) [NE.TRD.GNFS.ZS]</th>\n",
              "      <th>Net migration [SM.POP.NETM]</th>\n",
              "      <th>Unemployment, total (% of total labor force) (national estimate) [SL.UEM.TOTL.NE.ZS]</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>221</th>\n",
              "      <td>Trinidad and Tobago</td>\n",
              "      <td>TTO</td>\n",
              "      <td>2014.0</td>\n",
              "      <td>YR2014</td>\n",
              "      <td>3.853635</td>\n",
              "      <td>..</td>\n",
              "      <td>-799.0</td>\n",
              "      <td>2.477</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>222</th>\n",
              "      <td>Trinidad and Tobago</td>\n",
              "      <td>TTO</td>\n",
              "      <td>2015.0</td>\n",
              "      <td>YR2015</td>\n",
              "      <td>-0.77746</td>\n",
              "      <td>..</td>\n",
              "      <td>-583.0</td>\n",
              "      <td>2.428</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>223</th>\n",
              "      <td>Trinidad and Tobago</td>\n",
              "      <td>TTO</td>\n",
              "      <td>2016.0</td>\n",
              "      <td>YR2016</td>\n",
              "      <td>-7.527137</td>\n",
              "      <td>..</td>\n",
              "      <td>-103.0</td>\n",
              "      <td>3.207</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>224</th>\n",
              "      <td>Trinidad and Tobago</td>\n",
              "      <td>TTO</td>\n",
              "      <td>2017.0</td>\n",
              "      <td>YR2017</td>\n",
              "      <td>-4.800828</td>\n",
              "      <td>..</td>\n",
              "      <td>1446.0</td>\n",
              "      <td>..</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>225</th>\n",
              "      <td>Trinidad and Tobago</td>\n",
              "      <td>TTO</td>\n",
              "      <td>2018.0</td>\n",
              "      <td>YR2018</td>\n",
              "      <td>-0.602465</td>\n",
              "      <td>..</td>\n",
              "      <td>35502.0</td>\n",
              "      <td>..</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>226</th>\n",
              "      <td>Trinidad and Tobago</td>\n",
              "      <td>TTO</td>\n",
              "      <td>2019.0</td>\n",
              "      <td>YR2019</td>\n",
              "      <td>0.361272</td>\n",
              "      <td>..</td>\n",
              "      <td>-19248.0</td>\n",
              "      <td>3.523</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>227</th>\n",
              "      <td>Trinidad and Tobago</td>\n",
              "      <td>TTO</td>\n",
              "      <td>2020.0</td>\n",
              "      <td>YR2020</td>\n",
              "      <td>-9.077877</td>\n",
              "      <td>..</td>\n",
              "      <td>2370.0</td>\n",
              "      <td>4.206</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>228</th>\n",
              "      <td>Trinidad and Tobago</td>\n",
              "      <td>TTO</td>\n",
              "      <td>2021.0</td>\n",
              "      <td>YR2021</td>\n",
              "      <td>-1.037426</td>\n",
              "      <td>..</td>\n",
              "      <td>2632.0</td>\n",
              "      <td>4.446</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>229</th>\n",
              "      <td>Trinidad and Tobago</td>\n",
              "      <td>TTO</td>\n",
              "      <td>2022.0</td>\n",
              "      <td>YR2022</td>\n",
              "      <td>1.482235</td>\n",
              "      <td>..</td>\n",
              "      <td>-800.0</td>\n",
              "      <td>4.383</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>230</th>\n",
              "      <td>Trinidad and Tobago</td>\n",
              "      <td>TTO</td>\n",
              "      <td>2023.0</td>\n",
              "      <td>YR2023</td>\n",
              "      <td>2.103245</td>\n",
              "      <td>..</td>\n",
              "      <td>-800.0</td>\n",
              "      <td>..</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>231</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>232</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>233</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>234</th>\n",
              "      <td>Data from database: World Development Indicators</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>235</th>\n",
              "      <td>Last Updated: 09/19/2024</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-00bd5c7b-0f6c-4c03-9f3f-e3b3b6cec66e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-00bd5c7b-0f6c-4c03-9f3f-e3b3b6cec66e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-00bd5c7b-0f6c-4c03-9f3f-e3b3b6cec66e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-3451d91a-e980-4d5e-bd65-a5f3f26ccbd2\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3451d91a-e980-4d5e-bd65-a5f3f26ccbd2')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-3451d91a-e980-4d5e-bd65-a5f3f26ccbd2 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "repr_error": "0"
            }
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **3. Cleaning**"
      ],
      "metadata": {
        "id": "VuelkXWBhfci"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **3.1. Column names**"
      ],
      "metadata": {
        "id": "cjSlzPLUhnEm"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Change GDP growth (annual %) [NY.GDP.MKTP.KD.ZG] to GDP Growth (anual %)\n",
        "d.rename(columns = {'GDP growth (annual %) [NY.GDP.MKTP.KD.ZG]':'GDP Growth (anual %)'}, inplace = True)\n",
        "\n",
        "# Change Trade (% of GDP) [NE.TRD.GNFS.ZS] to Trade (% of GDP)\n",
        "d.rename(columns = {'Trade (% of GDP) [NE.TRD.GNFS.ZS]':'Trade (% of GDP)'}, inplace = True)\n",
        "\n",
        "# Change Net migration [SM.POP.NETM] to Net Migration\n",
        "d.rename(columns = {'Net migration [SM.POP.NETM]':'Net Migration'}, inplace = True)\n",
        "\n",
        "# Change Unemployment, total (% of total labor force) (national estimate)\n",
        "# [SL.UEM.TOTL.NE.ZS] to Total Unemployment\n",
        "d.rename(columns = {'Unemployment, total (% of total labor force) (national estimate) [SL.UEM.TOTL.NE.ZS]':'Total Unemployment'}, inplace = True)\n",
        "\n"
      ],
      "metadata": {
        "id": "NH_8VaIDh2WI"
      },
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "d.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "X8gf2uPdju1y",
        "outputId": "6cbfafc8-9a37-4eb6-ca96-5f3fcb427edf"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 236 entries, 0 to 235\n",
            "Data columns (total 8 columns):\n",
            " #   Column                Non-Null Count  Dtype  \n",
            "---  ------                --------------  -----  \n",
            " 0   country               233 non-null    object \n",
            " 1   country_code          231 non-null    object \n",
            " 2   year                  231 non-null    float64\n",
            " 3   time_code             231 non-null    object \n",
            " 4   GDP Growth (anual %)  231 non-null    object \n",
            " 5   Trade (% of GDP)      231 non-null    object \n",
            " 6   Net Migration         231 non-null    float64\n",
            " 7   Total Unemployment    231 non-null    object \n",
            "dtypes: float64(2), object(6)\n",
            "memory usage: 14.9+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Duplicate the dataset (Se duplica en caso de algun error tener la base original)\n",
        "d2 = d"
      ],
      "metadata": {
        "id": "LuyaFPZKitwS"
      },
      "execution_count": 19,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Create a new column with year as STR\n",
        "d2['year_str'] = d2['year'].astype(str)\n",
        "d2.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7QFQObLTjUNm",
        "outputId": "ce31ae17-ce37-498a-baac-4a7ae3020e6a"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 236 entries, 0 to 235\n",
            "Data columns (total 9 columns):\n",
            " #   Column                Non-Null Count  Dtype  \n",
            "---  ------                --------------  -----  \n",
            " 0   country               233 non-null    object \n",
            " 1   country_code          231 non-null    object \n",
            " 2   year                  231 non-null    float64\n",
            " 3   time_code             231 non-null    object \n",
            " 4   GDP Growth (anual %)  231 non-null    object \n",
            " 5   Trade (% of GDP)      231 non-null    object \n",
            " 6   Net Migration         231 non-null    float64\n",
            " 7   Total Unemployment    231 non-null    object \n",
            " 8   year_str              236 non-null    object \n",
            "dtypes: float64(2), object(7)\n",
            "memory usage: 16.7+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **3.2. Delete columns**"
      ],
      "metadata": {
        "id": "l6VrzK5xjt1U"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "d2 = d2.drop(columns = ['country_code'])"
      ],
      "metadata": {
        "id": "KAV5x6ssj2Pw"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "d2.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qbTqHV99ktpa",
        "outputId": "6eac1421-6745-4abf-cbf8-4e5b31fd8dda"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 2170 entries, 0 to 2169\n",
            "Data columns (total 9 columns):\n",
            " #   Column             Non-Null Count  Dtype \n",
            "---  ------             --------------  ----- \n",
            " 0   country            2170 non-null   object\n",
            " 1   year               2170 non-null   int64 \n",
            " 2   expense            2170 non-null   object\n",
            " 3   gini_index         2170 non-null   object\n",
            " 4   population_total   2170 non-null   int64 \n",
            " 5   electricity_total  2170 non-null   object\n",
            " 6   electricity_rural  2170 non-null   object\n",
            " 7   electricity_urban  2170 non-null   object\n",
            " 8   year_str           2170 non-null   object\n",
            "dtypes: int64(2), object(7)\n",
            "memory usage: 152.7+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **3.3. Delete NaN**"
      ],
      "metadata": {
        "id": "KGvxW8lllNDb"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Replace by NaN\n",
        "d2 = d2.replace('..', np.nan)\n",
        "d2.tail(15)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 814
        },
        "id": "iIDZLjtplSFl",
        "outputId": "4101cf39-e092-4b0c-f245-da2a130c0a2a"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                              country country_code    year  \\\n",
              "221                               Trinidad and Tobago          TTO  2014.0   \n",
              "222                               Trinidad and Tobago          TTO  2015.0   \n",
              "223                               Trinidad and Tobago          TTO  2016.0   \n",
              "224                               Trinidad and Tobago          TTO  2017.0   \n",
              "225                               Trinidad and Tobago          TTO  2018.0   \n",
              "226                               Trinidad and Tobago          TTO  2019.0   \n",
              "227                               Trinidad and Tobago          TTO  2020.0   \n",
              "228                               Trinidad and Tobago          TTO  2021.0   \n",
              "229                               Trinidad and Tobago          TTO  2022.0   \n",
              "230                               Trinidad and Tobago          TTO  2023.0   \n",
              "231                                               NaN          NaN     NaN   \n",
              "232                                               NaN          NaN     NaN   \n",
              "233                                               NaN          NaN     NaN   \n",
              "234  Data from database: World Development Indicators          NaN     NaN   \n",
              "235                          Last Updated: 09/19/2024          NaN     NaN   \n",
              "\n",
              "    time_code  GDP Growth (anual %)  Trade (% of GDP)  Net Migration  \\\n",
              "221    YR2014              3.853635               NaN         -799.0   \n",
              "222    YR2015             -0.777460               NaN         -583.0   \n",
              "223    YR2016             -7.527137               NaN         -103.0   \n",
              "224    YR2017             -4.800828               NaN         1446.0   \n",
              "225    YR2018             -0.602465               NaN        35502.0   \n",
              "226    YR2019              0.361272               NaN       -19248.0   \n",
              "227    YR2020             -9.077877               NaN         2370.0   \n",
              "228    YR2021             -1.037426               NaN         2632.0   \n",
              "229    YR2022              1.482235               NaN         -800.0   \n",
              "230    YR2023              2.103245               NaN         -800.0   \n",
              "231       NaN                   NaN               NaN            NaN   \n",
              "232       NaN                   NaN               NaN            NaN   \n",
              "233       NaN                   NaN               NaN            NaN   \n",
              "234       NaN                   NaN               NaN            NaN   \n",
              "235       NaN                   NaN               NaN            NaN   \n",
              "\n",
              "     Total Unemployment year_str  \n",
              "221               2.477   2014.0  \n",
              "222               2.428   2015.0  \n",
              "223               3.207   2016.0  \n",
              "224                 NaN   2017.0  \n",
              "225                 NaN   2018.0  \n",
              "226               3.523   2019.0  \n",
              "227               4.206   2020.0  \n",
              "228               4.446   2021.0  \n",
              "229               4.383   2022.0  \n",
              "230                 NaN   2023.0  \n",
              "231                 NaN      nan  \n",
              "232                 NaN      nan  \n",
              "233                 NaN      nan  \n",
              "234                 NaN      nan  \n",
              "235                 NaN      nan  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9d57a33d-a4bf-4512-8fd1-f15a763455fe\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>country</th>\n",
              "      <th>country_code</th>\n",
              "      <th>year</th>\n",
              "      <th>time_code</th>\n",
              "      <th>GDP Growth (anual %)</th>\n",
              "      <th>Trade (% of GDP)</th>\n",
              "      <th>Net Migration</th>\n",
              "      <th>Total Unemployment</th>\n",
              "      <th>year_str</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>221</th>\n",
              "      <td>Trinidad and Tobago</td>\n",
              "      <td>TTO</td>\n",
              "      <td>2014.0</td>\n",
              "      <td>YR2014</td>\n",
              "      <td>3.853635</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-799.0</td>\n",
              "      <td>2.477</td>\n",
              "      <td>2014.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>222</th>\n",
              "      <td>Trinidad and Tobago</td>\n",
              "      <td>TTO</td>\n",
              "      <td>2015.0</td>\n",
              "      <td>YR2015</td>\n",
              "      <td>-0.777460</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-583.0</td>\n",
              "      <td>2.428</td>\n",
              "      <td>2015.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>223</th>\n",
              "      <td>Trinidad and Tobago</td>\n",
              "      <td>TTO</td>\n",
              "      <td>2016.0</td>\n",
              "      <td>YR2016</td>\n",
              "      <td>-7.527137</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-103.0</td>\n",
              "      <td>3.207</td>\n",
              "      <td>2016.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>224</th>\n",
              "      <td>Trinidad and Tobago</td>\n",
              "      <td>TTO</td>\n",
              "      <td>2017.0</td>\n",
              "      <td>YR2017</td>\n",
              "      <td>-4.800828</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1446.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2017.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>225</th>\n",
              "      <td>Trinidad and Tobago</td>\n",
              "      <td>TTO</td>\n",
              "      <td>2018.0</td>\n",
              "      <td>YR2018</td>\n",
              "      <td>-0.602465</td>\n",
              "      <td>NaN</td>\n",
              "      <td>35502.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2018.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>226</th>\n",
              "      <td>Trinidad and Tobago</td>\n",
              "      <td>TTO</td>\n",
              "      <td>2019.0</td>\n",
              "      <td>YR2019</td>\n",
              "      <td>0.361272</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-19248.0</td>\n",
              "      <td>3.523</td>\n",
              "      <td>2019.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>227</th>\n",
              "      <td>Trinidad and Tobago</td>\n",
              "      <td>TTO</td>\n",
              "      <td>2020.0</td>\n",
              "      <td>YR2020</td>\n",
              "      <td>-9.077877</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2370.0</td>\n",
              "      <td>4.206</td>\n",
              "      <td>2020.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>228</th>\n",
              "      <td>Trinidad and Tobago</td>\n",
              "      <td>TTO</td>\n",
              "      <td>2021.0</td>\n",
              "      <td>YR2021</td>\n",
              "      <td>-1.037426</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2632.0</td>\n",
              "      <td>4.446</td>\n",
              "      <td>2021.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>229</th>\n",
              "      <td>Trinidad and Tobago</td>\n",
              "      <td>TTO</td>\n",
              "      <td>2022.0</td>\n",
              "      <td>YR2022</td>\n",
              "      <td>1.482235</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-800.0</td>\n",
              "      <td>4.383</td>\n",
              "      <td>2022.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>230</th>\n",
              "      <td>Trinidad and Tobago</td>\n",
              "      <td>TTO</td>\n",
              "      <td>2023.0</td>\n",
              "      <td>YR2023</td>\n",
              "      <td>2.103245</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-800.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2023.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>231</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>nan</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>232</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>nan</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>233</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>nan</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>234</th>\n",
              "      <td>Data from database: World Development Indicators</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>nan</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>235</th>\n",
              "      <td>Last Updated: 09/19/2024</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>nan</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9d57a33d-a4bf-4512-8fd1-f15a763455fe')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9d57a33d-a4bf-4512-8fd1-f15a763455fe button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9d57a33d-a4bf-4512-8fd1-f15a763455fe');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-42fc4281-4a4c-4a98-8068-4780368519b6\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-42fc4281-4a4c-4a98-8068-4780368519b6')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-42fc4281-4a4c-4a98-8068-4780368519b6 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"d2\",\n  \"rows\": 15,\n  \"fields\": [\n    {\n      \"column\": \"country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Trinidad and Tobago\",\n          \"Data from database: World Development Indicators\",\n          \"Last Updated: 09/19/2024\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"country_code\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"TTO\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.0276503540974917,\n        \"min\": 2014.0,\n        \"max\": 2023.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          2022.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"time_code\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"YR2022\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GDP Growth (anual %)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.217502119782459,\n        \"min\": -9.077876893484373,\n        \"max\": 3.8536354828907946,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          1.4822348404474468\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Trade (% of GDP)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Net Migration\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13372.022942197891,\n        \"min\": -19248.0,\n        \"max\": 35502.0,\n        \"num_unique_values\": 9,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total Unemployment\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8612978025990224,\n        \"min\": 2.428,\n        \"max\": 4.446,\n        \"num_unique_values\": 7,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year_str\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 11,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "d2.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MTzaqI8_lpro",
        "outputId": "d24762eb-10fa-410f-eaa8-0afaae31a6d1"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 236 entries, 0 to 235\n",
            "Data columns (total 9 columns):\n",
            " #   Column                Non-Null Count  Dtype  \n",
            "---  ------                --------------  -----  \n",
            " 0   country               233 non-null    object \n",
            " 1   country_code          231 non-null    object \n",
            " 2   year                  231 non-null    float64\n",
            " 3   time_code             231 non-null    object \n",
            " 4   GDP Growth (anual %)  230 non-null    float64\n",
            " 5   Trade (% of GDP)      141 non-null    float64\n",
            " 6   Net Migration         231 non-null    float64\n",
            " 7   Total Unemployment    128 non-null    float64\n",
            " 8   year_str              236 non-null    object \n",
            "dtypes: float64(5), object(4)\n",
            "memory usage: 16.7+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Drop NaN\n",
        "d2 = d2.dropna()\n",
        "d2.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bVARnHPIl_qS",
        "outputId": "aa0104ae-38f3-4cb5-a2c8-fd7c7f83a296"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Index: 97 entries, 0 to 171\n",
            "Data columns (total 9 columns):\n",
            " #   Column                Non-Null Count  Dtype  \n",
            "---  ------                --------------  -----  \n",
            " 0   country               97 non-null     object \n",
            " 1   country_code          97 non-null     object \n",
            " 2   year                  97 non-null     float64\n",
            " 3   time_code             97 non-null     object \n",
            " 4   GDP Growth (anual %)  97 non-null     float64\n",
            " 5   Trade (% of GDP)      97 non-null     float64\n",
            " 6   Net Migration         97 non-null     float64\n",
            " 7   Total Unemployment    97 non-null     float64\n",
            " 8   year_str              97 non-null     object \n",
            "dtypes: float64(5), object(4)\n",
            "memory usage: 7.6+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "d2.tail(15)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 693
        },
        "id": "j1LPqNWdmj76",
        "outputId": "366085fb-ffda-4205-f32a-883231249f62"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                country country_code    year time_code  GDP Growth (anual %)  \\\n",
              "124  Dominican Republic          DOM  2016.0    YR2016              6.659200   \n",
              "125  Dominican Republic          DOM  2017.0    YR2017              4.666705   \n",
              "126  Dominican Republic          DOM  2018.0    YR2018              6.982528   \n",
              "127  Dominican Republic          DOM  2019.0    YR2019              5.052168   \n",
              "128  Dominican Republic          DOM  2020.0    YR2020             -6.720239   \n",
              "129  Dominican Republic          DOM  2021.0    YR2021             12.271990   \n",
              "130  Dominican Republic          DOM  2022.0    YR2022              4.858324   \n",
              "131  Dominican Republic          DOM  2023.0    YR2023              2.360616   \n",
              "165             Jamaica          JAM  2013.0    YR2013              0.517686   \n",
              "166             Jamaica          JAM  2014.0    YR2014              0.689822   \n",
              "167             Jamaica          JAM  2015.0    YR2015              0.921487   \n",
              "168             Jamaica          JAM  2016.0    YR2016              1.375223   \n",
              "169             Jamaica          JAM  2017.0    YR2017              0.997123   \n",
              "170             Jamaica          JAM  2018.0    YR2018              1.889924   \n",
              "171             Jamaica          JAM  2019.0    YR2019              0.892292   \n",
              "\n",
              "     Trade (% of GDP)  Net Migration  Total Unemployment year_str  \n",
              "124         51.585971       -30181.0               7.284   2016.0  \n",
              "125         50.225085       -30055.0               5.832   2017.0  \n",
              "126         52.055966       -29944.0               5.861   2018.0  \n",
              "127         51.011145       -29830.0               6.356   2019.0  \n",
              "128         44.293657       -14966.0               6.126   2020.0  \n",
              "129         52.734867       -14966.0               7.702   2021.0  \n",
              "130         54.231526       -29294.0               5.504   2022.0  \n",
              "131         49.615332       -29099.0               5.555   2023.0  \n",
              "165         83.259572       -11329.0               9.698   2013.0  \n",
              "166         84.740999       -11329.0               9.046   2014.0  \n",
              "167         76.117522       -11329.0              13.511   2015.0  \n",
              "168         76.455202       -11329.0               8.634   2016.0  \n",
              "169         83.523173       -11329.0               7.399   2017.0  \n",
              "170         89.977906       -11329.0               5.470   2018.0  \n",
              "171         90.110608       -11329.0               4.987   2019.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e2520f85-9952-4b4b-9e48-18c94568031d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>country</th>\n",
              "      <th>country_code</th>\n",
              "      <th>year</th>\n",
              "      <th>time_code</th>\n",
              "      <th>GDP Growth (anual %)</th>\n",
              "      <th>Trade (% of GDP)</th>\n",
              "      <th>Net Migration</th>\n",
              "      <th>Total Unemployment</th>\n",
              "      <th>year_str</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>124</th>\n",
              "      <td>Dominican Republic</td>\n",
              "      <td>DOM</td>\n",
              "      <td>2016.0</td>\n",
              "      <td>YR2016</td>\n",
              "      <td>6.659200</td>\n",
              "      <td>51.585971</td>\n",
              "      <td>-30181.0</td>\n",
              "      <td>7.284</td>\n",
              "      <td>2016.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>125</th>\n",
              "      <td>Dominican Republic</td>\n",
              "      <td>DOM</td>\n",
              "      <td>2017.0</td>\n",
              "      <td>YR2017</td>\n",
              "      <td>4.666705</td>\n",
              "      <td>50.225085</td>\n",
              "      <td>-30055.0</td>\n",
              "      <td>5.832</td>\n",
              "      <td>2017.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>126</th>\n",
              "      <td>Dominican Republic</td>\n",
              "      <td>DOM</td>\n",
              "      <td>2018.0</td>\n",
              "      <td>YR2018</td>\n",
              "      <td>6.982528</td>\n",
              "      <td>52.055966</td>\n",
              "      <td>-29944.0</td>\n",
              "      <td>5.861</td>\n",
              "      <td>2018.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>127</th>\n",
              "      <td>Dominican Republic</td>\n",
              "      <td>DOM</td>\n",
              "      <td>2019.0</td>\n",
              "      <td>YR2019</td>\n",
              "      <td>5.052168</td>\n",
              "      <td>51.011145</td>\n",
              "      <td>-29830.0</td>\n",
              "      <td>6.356</td>\n",
              "      <td>2019.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>128</th>\n",
              "      <td>Dominican Republic</td>\n",
              "      <td>DOM</td>\n",
              "      <td>2020.0</td>\n",
              "      <td>YR2020</td>\n",
              "      <td>-6.720239</td>\n",
              "      <td>44.293657</td>\n",
              "      <td>-14966.0</td>\n",
              "      <td>6.126</td>\n",
              "      <td>2020.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>129</th>\n",
              "      <td>Dominican Republic</td>\n",
              "      <td>DOM</td>\n",
              "      <td>2021.0</td>\n",
              "      <td>YR2021</td>\n",
              "      <td>12.271990</td>\n",
              "      <td>52.734867</td>\n",
              "      <td>-14966.0</td>\n",
              "      <td>7.702</td>\n",
              "      <td>2021.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>130</th>\n",
              "      <td>Dominican Republic</td>\n",
              "      <td>DOM</td>\n",
              "      <td>2022.0</td>\n",
              "      <td>YR2022</td>\n",
              "      <td>4.858324</td>\n",
              "      <td>54.231526</td>\n",
              "      <td>-29294.0</td>\n",
              "      <td>5.504</td>\n",
              "      <td>2022.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>131</th>\n",
              "      <td>Dominican Republic</td>\n",
              "      <td>DOM</td>\n",
              "      <td>2023.0</td>\n",
              "      <td>YR2023</td>\n",
              "      <td>2.360616</td>\n",
              "      <td>49.615332</td>\n",
              "      <td>-29099.0</td>\n",
              "      <td>5.555</td>\n",
              "      <td>2023.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>165</th>\n",
              "      <td>Jamaica</td>\n",
              "      <td>JAM</td>\n",
              "      <td>2013.0</td>\n",
              "      <td>YR2013</td>\n",
              "      <td>0.517686</td>\n",
              "      <td>83.259572</td>\n",
              "      <td>-11329.0</td>\n",
              "      <td>9.698</td>\n",
              "      <td>2013.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>166</th>\n",
              "      <td>Jamaica</td>\n",
              "      <td>JAM</td>\n",
              "      <td>2014.0</td>\n",
              "      <td>YR2014</td>\n",
              "      <td>0.689822</td>\n",
              "      <td>84.740999</td>\n",
              "      <td>-11329.0</td>\n",
              "      <td>9.046</td>\n",
              "      <td>2014.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>167</th>\n",
              "      <td>Jamaica</td>\n",
              "      <td>JAM</td>\n",
              "      <td>2015.0</td>\n",
              "      <td>YR2015</td>\n",
              "      <td>0.921487</td>\n",
              "      <td>76.117522</td>\n",
              "      <td>-11329.0</td>\n",
              "      <td>13.511</td>\n",
              "      <td>2015.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>168</th>\n",
              "      <td>Jamaica</td>\n",
              "      <td>JAM</td>\n",
              "      <td>2016.0</td>\n",
              "      <td>YR2016</td>\n",
              "      <td>1.375223</td>\n",
              "      <td>76.455202</td>\n",
              "      <td>-11329.0</td>\n",
              "      <td>8.634</td>\n",
              "      <td>2016.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>169</th>\n",
              "      <td>Jamaica</td>\n",
              "      <td>JAM</td>\n",
              "      <td>2017.0</td>\n",
              "      <td>YR2017</td>\n",
              "      <td>0.997123</td>\n",
              "      <td>83.523173</td>\n",
              "      <td>-11329.0</td>\n",
              "      <td>7.399</td>\n",
              "      <td>2017.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>170</th>\n",
              "      <td>Jamaica</td>\n",
              "      <td>JAM</td>\n",
              "      <td>2018.0</td>\n",
              "      <td>YR2018</td>\n",
              "      <td>1.889924</td>\n",
              "      <td>89.977906</td>\n",
              "      <td>-11329.0</td>\n",
              "      <td>5.470</td>\n",
              "      <td>2018.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>171</th>\n",
              "      <td>Jamaica</td>\n",
              "      <td>JAM</td>\n",
              "      <td>2019.0</td>\n",
              "      <td>YR2019</td>\n",
              "      <td>0.892292</td>\n",
              "      <td>90.110608</td>\n",
              "      <td>-11329.0</td>\n",
              "      <td>4.987</td>\n",
              "      <td>2019.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e2520f85-9952-4b4b-9e48-18c94568031d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e2520f85-9952-4b4b-9e48-18c94568031d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e2520f85-9952-4b4b-9e48-18c94568031d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-36aedfb6-0ab0-4e18-a686-03926a8556b3\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-36aedfb6-0ab0-4e18-a686-03926a8556b3')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-36aedfb6-0ab0-4e18-a686-03926a8556b3 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"d2\",\n  \"rows\": 15,\n  \"fields\": [\n    {\n      \"column\": \"country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Jamaica\",\n          \"Dominican Republic\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"country_code\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"JAM\",\n          \"DOM\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.8751811537130436,\n        \"min\": 2013.0,\n        \"max\": 2023.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          2021.0,\n          2016.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"time_code\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"YR2021\",\n          \"YR2016\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GDP Growth (anual %)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.213348117102138,\n        \"min\": -6.720239372834044,\n        \"max\": 12.271990234789598,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          0.6898223573743394,\n          1.3752230644553833\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Trade (% of GDP)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17.43132133620395,\n        \"min\": 44.29365655246752,\n        \"max\": 90.11060763359936,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          84.74099862313,\n          76.45520237368503\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Net Migration\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9008.869128861423,\n        \"min\": -30181.0,\n        \"max\": -11329.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          -30055.0,\n          -29294.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total Unemployment\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.2483683501809124,\n        \"min\": 4.987,\n        \"max\": 13.511,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          9.046,\n          8.634\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year_str\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"2021.0\",\n          \"2016.0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **4. Indexing**"
      ],
      "metadata": {
        "id": "5WloU4O6m1wj"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Categories of the dataset (Categorizar las columnas principales)"
      ],
      "metadata": {
        "id": "90UnLp_XnUpN"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Indexing\n",
        "d2 = d2.set_index(['country', 'year'])\n",
        "d2.head(15)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 568
        },
        "id": "34u-R1sznY0I",
        "outputId": "ffc45c1a-93d0-40c0-da44-d16d924940f0"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                   country_code time_code  GDP Growth (anual %)  \\\n",
              "country     year                                                  \n",
              "Costa Rica  2013.0          CRI    YR2013              2.494766   \n",
              "            2014.0          CRI    YR2014              3.542110   \n",
              "            2015.0          CRI    YR2015              3.652081   \n",
              "            2016.0          CRI    YR2016              4.204323   \n",
              "            2017.0          CRI    YR2017              4.157699   \n",
              "            2018.0          CRI    YR2018              2.615904   \n",
              "            2019.0          CRI    YR2019              2.417512   \n",
              "            2020.0          CRI    YR2020             -4.273354   \n",
              "            2021.0          CRI    YR2021              7.935762   \n",
              "            2022.0          CRI    YR2022              4.551492   \n",
              "            2023.0          CRI    YR2023              5.111922   \n",
              "El Salvador 2013.0          SLV    YR2013              2.182952   \n",
              "            2014.0          SLV    YR2014              1.729400   \n",
              "            2015.0          SLV    YR2015              2.400000   \n",
              "            2016.0          SLV    YR2016              2.539062   \n",
              "\n",
              "                    Trade (% of GDP)  Net Migration  Total Unemployment  \\\n",
              "country     year                                                          \n",
              "Costa Rica  2013.0         64.066411         3950.0               8.218   \n",
              "            2014.0         65.191242         3996.0               8.499   \n",
              "            2015.0         60.753562         4065.0               8.415   \n",
              "            2016.0         62.178478         4150.0               8.085   \n",
              "            2017.0         65.071954         4196.0               7.729   \n",
              "            2018.0         66.945342         4198.0               9.010   \n",
              "            2019.0         65.760530         4154.0              10.807   \n",
              "            2020.0         60.139886         2084.0              16.432   \n",
              "            2021.0         70.781642         2084.0              15.139   \n",
              "            2022.0         79.659195         3850.0              11.325   \n",
              "            2023.0         70.286815         3750.0               8.325   \n",
              "El Salvador 2013.0         80.451194       -49086.0               3.693   \n",
              "            2014.0         78.104426       -49130.0               4.154   \n",
              "            2015.0         76.560271       -51282.0               3.998   \n",
              "            2016.0         72.819093       -47499.0               4.418   \n",
              "\n",
              "                   year_str  \n",
              "country     year             \n",
              "Costa Rica  2013.0   2013.0  \n",
              "            2014.0   2014.0  \n",
              "            2015.0   2015.0  \n",
              "            2016.0   2016.0  \n",
              "            2017.0   2017.0  \n",
              "            2018.0   2018.0  \n",
              "            2019.0   2019.0  \n",
              "            2020.0   2020.0  \n",
              "            2021.0   2021.0  \n",
              "            2022.0   2022.0  \n",
              "            2023.0   2023.0  \n",
              "El Salvador 2013.0   2013.0  \n",
              "            2014.0   2014.0  \n",
              "            2015.0   2015.0  \n",
              "            2016.0   2016.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-71e09a7b-29c2-4ace-9dbe-b2e83f7db2f0\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>country_code</th>\n",
              "      <th>time_code</th>\n",
              "      <th>GDP Growth (anual %)</th>\n",
              "      <th>Trade (% of GDP)</th>\n",
              "      <th>Net Migration</th>\n",
              "      <th>Total Unemployment</th>\n",
              "      <th>year_str</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>country</th>\n",
              "      <th>year</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th rowspan=\"11\" valign=\"top\">Costa Rica</th>\n",
              "      <th>2013.0</th>\n",
              "      <td>CRI</td>\n",
              "      <td>YR2013</td>\n",
              "      <td>2.494766</td>\n",
              "      <td>64.066411</td>\n",
              "      <td>3950.0</td>\n",
              "      <td>8.218</td>\n",
              "      <td>2013.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2014.0</th>\n",
              "      <td>CRI</td>\n",
              "      <td>YR2014</td>\n",
              "      <td>3.542110</td>\n",
              "      <td>65.191242</td>\n",
              "      <td>3996.0</td>\n",
              "      <td>8.499</td>\n",
              "      <td>2014.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015.0</th>\n",
              "      <td>CRI</td>\n",
              "      <td>YR2015</td>\n",
              "      <td>3.652081</td>\n",
              "      <td>60.753562</td>\n",
              "      <td>4065.0</td>\n",
              "      <td>8.415</td>\n",
              "      <td>2015.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016.0</th>\n",
              "      <td>CRI</td>\n",
              "      <td>YR2016</td>\n",
              "      <td>4.204323</td>\n",
              "      <td>62.178478</td>\n",
              "      <td>4150.0</td>\n",
              "      <td>8.085</td>\n",
              "      <td>2016.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017.0</th>\n",
              "      <td>CRI</td>\n",
              "      <td>YR2017</td>\n",
              "      <td>4.157699</td>\n",
              "      <td>65.071954</td>\n",
              "      <td>4196.0</td>\n",
              "      <td>7.729</td>\n",
              "      <td>2017.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018.0</th>\n",
              "      <td>CRI</td>\n",
              "      <td>YR2018</td>\n",
              "      <td>2.615904</td>\n",
              "      <td>66.945342</td>\n",
              "      <td>4198.0</td>\n",
              "      <td>9.010</td>\n",
              "      <td>2018.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019.0</th>\n",
              "      <td>CRI</td>\n",
              "      <td>YR2019</td>\n",
              "      <td>2.417512</td>\n",
              "      <td>65.760530</td>\n",
              "      <td>4154.0</td>\n",
              "      <td>10.807</td>\n",
              "      <td>2019.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020.0</th>\n",
              "      <td>CRI</td>\n",
              "      <td>YR2020</td>\n",
              "      <td>-4.273354</td>\n",
              "      <td>60.139886</td>\n",
              "      <td>2084.0</td>\n",
              "      <td>16.432</td>\n",
              "      <td>2020.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021.0</th>\n",
              "      <td>CRI</td>\n",
              "      <td>YR2021</td>\n",
              "      <td>7.935762</td>\n",
              "      <td>70.781642</td>\n",
              "      <td>2084.0</td>\n",
              "      <td>15.139</td>\n",
              "      <td>2021.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022.0</th>\n",
              "      <td>CRI</td>\n",
              "      <td>YR2022</td>\n",
              "      <td>4.551492</td>\n",
              "      <td>79.659195</td>\n",
              "      <td>3850.0</td>\n",
              "      <td>11.325</td>\n",
              "      <td>2022.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2023.0</th>\n",
              "      <td>CRI</td>\n",
              "      <td>YR2023</td>\n",
              "      <td>5.111922</td>\n",
              "      <td>70.286815</td>\n",
              "      <td>3750.0</td>\n",
              "      <td>8.325</td>\n",
              "      <td>2023.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"4\" valign=\"top\">El Salvador</th>\n",
              "      <th>2013.0</th>\n",
              "      <td>SLV</td>\n",
              "      <td>YR2013</td>\n",
              "      <td>2.182952</td>\n",
              "      <td>80.451194</td>\n",
              "      <td>-49086.0</td>\n",
              "      <td>3.693</td>\n",
              "      <td>2013.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2014.0</th>\n",
              "      <td>SLV</td>\n",
              "      <td>YR2014</td>\n",
              "      <td>1.729400</td>\n",
              "      <td>78.104426</td>\n",
              "      <td>-49130.0</td>\n",
              "      <td>4.154</td>\n",
              "      <td>2014.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015.0</th>\n",
              "      <td>SLV</td>\n",
              "      <td>YR2015</td>\n",
              "      <td>2.400000</td>\n",
              "      <td>76.560271</td>\n",
              "      <td>-51282.0</td>\n",
              "      <td>3.998</td>\n",
              "      <td>2015.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016.0</th>\n",
              "      <td>SLV</td>\n",
              "      <td>YR2016</td>\n",
              "      <td>2.539062</td>\n",
              "      <td>72.819093</td>\n",
              "      <td>-47499.0</td>\n",
              "      <td>4.418</td>\n",
              "      <td>2016.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-71e09a7b-29c2-4ace-9dbe-b2e83f7db2f0')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-71e09a7b-29c2-4ace-9dbe-b2e83f7db2f0 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-71e09a7b-29c2-4ace-9dbe-b2e83f7db2f0');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-2ae3ebb6-958e-4b2d-b1ec-7c94d4b0bf1e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2ae3ebb6-958e-4b2d-b1ec-7c94d4b0bf1e')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-2ae3ebb6-958e-4b2d-b1ec-7c94d4b0bf1e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "d2",
              "summary": "{\n  \"name\": \"d2\",\n  \"rows\": 97,\n  \"fields\": [\n    {\n      \"column\": \"country_code\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"PAN\",\n          \"CRI\",\n          \"DOM\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"time_code\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"YR2018\",\n          \"YR2013\",\n          \"YR2022\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GDP Growth (anual %)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.233067373806912,\n        \"min\": -17.668332721853304,\n        \"max\": 15.835765045401985,\n        \"num_unique_values\": 97,\n        \"samples\": [\n          -0.01103441457807719,\n          12.565284377127895,\n          1.3752230644553833\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Trade (% of GDP)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23.276082998658993,\n        \"min\": 26.22284938803653,\n        \"max\": 137.63407375893368,\n        \"num_unique_values\": 97,\n        \"samples\": [\n          96.45726006283232,\n          103.37264345991841,\n          76.45520237368503\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Net Migration\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18709.00741763883,\n        \"min\": -58095.0,\n        \"max\": 11130.0,\n        \"num_unique_values\": 81,\n        \"samples\": [\n          -6094.0,\n          3950.0,\n          -48162.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total Unemployment\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.4881922052890832,\n        \"min\": 1.7,\n        \"max\": 18.548,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          7.605,\n          1.7,\n          3.29\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year_str\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"2018.0\",\n          \"2013.0\",\n          \"2022.0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "d2.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "w_zaTkzbntTR",
        "outputId": "33e375a3-66e6-4732-83f7-d80da81aaa57"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "MultiIndex: 97 entries, ('Costa Rica', 2013.0) to ('Jamaica', 2019.0)\n",
            "Data columns (total 7 columns):\n",
            " #   Column                Non-Null Count  Dtype  \n",
            "---  ------                --------------  -----  \n",
            " 0   country_code          97 non-null     object \n",
            " 1   time_code             97 non-null     object \n",
            " 2   GDP Growth (anual %)  97 non-null     float64\n",
            " 3   Trade (% of GDP)      97 non-null     float64\n",
            " 4   Net Migration         97 non-null     float64\n",
            " 5   Total Unemployment    97 non-null     float64\n",
            " 6   year_str              97 non-null     object \n",
            "dtypes: float64(4), object(3)\n",
            "memory usage: 6.4+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **5. Descriptive statistics**"
      ],
      "metadata": {
        "id": "f5kZCRyWoFZC"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "d2.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "Zr0mzePNoU_m",
        "outputId": "e6da4243-c96d-4c87-8aaf-415830dd80bc"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       GDP Growth (anual %)  Trade (% of GDP)  Net Migration  \\\n",
              "count             97.000000         97.000000      97.000000   \n",
              "mean               3.085210         75.811743  -14087.391753   \n",
              "std                4.233067         23.276083   18709.007418   \n",
              "min              -17.668333         26.222849  -58095.000000   \n",
              "25%                2.182952         55.496423  -27343.000000   \n",
              "50%                3.484485         76.204442  -11329.000000   \n",
              "75%                4.666705         93.984983    1283.000000   \n",
              "max               15.835765        137.634074   11130.000000   \n",
              "\n",
              "       Total Unemployment  \n",
              "count           97.000000  \n",
              "mean             6.604186  \n",
              "std              3.488192  \n",
              "min              1.700000  \n",
              "25%              4.154000  \n",
              "50%              5.861000  \n",
              "75%              8.415000  \n",
              "max             18.548000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1223442b-e519-4a71-931d-9a227a71de4f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>GDP Growth (anual %)</th>\n",
              "      <th>Trade (% of GDP)</th>\n",
              "      <th>Net Migration</th>\n",
              "      <th>Total Unemployment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>97.000000</td>\n",
              "      <td>97.000000</td>\n",
              "      <td>97.000000</td>\n",
              "      <td>97.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>3.085210</td>\n",
              "      <td>75.811743</td>\n",
              "      <td>-14087.391753</td>\n",
              "      <td>6.604186</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>4.233067</td>\n",
              "      <td>23.276083</td>\n",
              "      <td>18709.007418</td>\n",
              "      <td>3.488192</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>-17.668333</td>\n",
              "      <td>26.222849</td>\n",
              "      <td>-58095.000000</td>\n",
              "      <td>1.700000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>2.182952</td>\n",
              "      <td>55.496423</td>\n",
              "      <td>-27343.000000</td>\n",
              "      <td>4.154000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>3.484485</td>\n",
              "      <td>76.204442</td>\n",
              "      <td>-11329.000000</td>\n",
              "      <td>5.861000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>4.666705</td>\n",
              "      <td>93.984983</td>\n",
              "      <td>1283.000000</td>\n",
              "      <td>8.415000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>15.835765</td>\n",
              "      <td>137.634074</td>\n",
              "      <td>11130.000000</td>\n",
              "      <td>18.548000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1223442b-e519-4a71-931d-9a227a71de4f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-1223442b-e519-4a71-931d-9a227a71de4f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-1223442b-e519-4a71-931d-9a227a71de4f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-5b52585d-966a-4156-a318-3e5e2908e026\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5b52585d-966a-4156-a318-3e5e2908e026')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-5b52585d-966a-4156-a318-3e5e2908e026 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"d2\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"GDP Growth (anual %)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 34.73784270921261,\n        \"min\": -17.668332721853304,\n        \"max\": 97.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.085209589691136,\n          3.4844847274090256,\n          97.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Trade (% of GDP)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 38.132700468960316,\n        \"min\": 23.276082998658993,\n        \"max\": 137.63407375893368,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          75.81174315222842,\n          76.20444204885936,\n          97.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Net Migration\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24296.691641844627,\n        \"min\": -58095.0,\n        \"max\": 18709.00741763883,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          -14087.39175257732,\n          -11329.0,\n          97.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total Unemployment\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 32.24458966440214,\n        \"min\": 1.7,\n        \"max\": 97.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          6.604185567010309,\n          5.861,\n          97.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Formatear mejor los datos para el comando d2.describe() a dos decimales.\n",
        "d2.describe().apply(lambda s: s.apply('{0:.2f}'.format))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "ZP8R6n2Io4Ns",
        "outputId": "abbe284a-f5ca-47ac-f5b3-969604af29e9"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      GDP Growth (anual %) Trade (% of GDP) Net Migration Total Unemployment\n",
              "count                97.00            97.00         97.00              97.00\n",
              "mean                  3.09            75.81     -14087.39               6.60\n",
              "std                   4.23            23.28      18709.01               3.49\n",
              "min                 -17.67            26.22     -58095.00               1.70\n",
              "25%                   2.18            55.50     -27343.00               4.15\n",
              "50%                   3.48            76.20     -11329.00               5.86\n",
              "75%                   4.67            93.98       1283.00               8.41\n",
              "max                  15.84           137.63      11130.00              18.55"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-88ab0629-1012-49dc-a2e2-3790acac13fd\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>GDP Growth (anual %)</th>\n",
              "      <th>Trade (% of GDP)</th>\n",
              "      <th>Net Migration</th>\n",
              "      <th>Total Unemployment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>97.00</td>\n",
              "      <td>97.00</td>\n",
              "      <td>97.00</td>\n",
              "      <td>97.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>3.09</td>\n",
              "      <td>75.81</td>\n",
              "      <td>-14087.39</td>\n",
              "      <td>6.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>4.23</td>\n",
              "      <td>23.28</td>\n",
              "      <td>18709.01</td>\n",
              "      <td>3.49</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>-17.67</td>\n",
              "      <td>26.22</td>\n",
              "      <td>-58095.00</td>\n",
              "      <td>1.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>2.18</td>\n",
              "      <td>55.50</td>\n",
              "      <td>-27343.00</td>\n",
              "      <td>4.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>3.48</td>\n",
              "      <td>76.20</td>\n",
              "      <td>-11329.00</td>\n",
              "      <td>5.86</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>4.67</td>\n",
              "      <td>93.98</td>\n",
              "      <td>1283.00</td>\n",
              "      <td>8.41</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>15.84</td>\n",
              "      <td>137.63</td>\n",
              "      <td>11130.00</td>\n",
              "      <td>18.55</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-88ab0629-1012-49dc-a2e2-3790acac13fd')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-88ab0629-1012-49dc-a2e2-3790acac13fd button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-88ab0629-1012-49dc-a2e2-3790acac13fd');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7107e808-f211-4a3c-8bc9-8220278b7a52\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7107e808-f211-4a3c-8bc9-8220278b7a52')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7107e808-f211-4a3c-8bc9-8220278b7a52 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"d2\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"GDP Growth (anual %)\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"3.09\",\n          \"3.48\",\n          \"97.00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Trade (% of GDP)\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"75.81\",\n          \"76.20\",\n          \"97.00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Net Migration\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"-14087.39\",\n          \"-11329.00\",\n          \"97.00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total Unemployment\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"6.60\",\n          \"5.86\",\n          \"97.00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Formatear los datos para el comando d2.describe() separar los miles con coma.\n",
        "d2.describe().apply(lambda s: s.apply('{:,.2f}'.format))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "tv19D5fbp15r",
        "outputId": "8bd66cc3-cd8a-4b05-986d-edd0108aee02"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      GDP Growth (anual %) Trade (% of GDP) Net Migration Total Unemployment\n",
              "count                97.00            97.00         97.00              97.00\n",
              "mean                  3.09            75.81    -14,087.39               6.60\n",
              "std                   4.23            23.28     18,709.01               3.49\n",
              "min                 -17.67            26.22    -58,095.00               1.70\n",
              "25%                   2.18            55.50    -27,343.00               4.15\n",
              "50%                   3.48            76.20    -11,329.00               5.86\n",
              "75%                   4.67            93.98      1,283.00               8.41\n",
              "max                  15.84           137.63     11,130.00              18.55"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0b0d0d74-5ce2-422c-8baa-c7f82440bedf\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>GDP Growth (anual %)</th>\n",
              "      <th>Trade (% of GDP)</th>\n",
              "      <th>Net Migration</th>\n",
              "      <th>Total Unemployment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>97.00</td>\n",
              "      <td>97.00</td>\n",
              "      <td>97.00</td>\n",
              "      <td>97.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>3.09</td>\n",
              "      <td>75.81</td>\n",
              "      <td>-14,087.39</td>\n",
              "      <td>6.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>4.23</td>\n",
              "      <td>23.28</td>\n",
              "      <td>18,709.01</td>\n",
              "      <td>3.49</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>-17.67</td>\n",
              "      <td>26.22</td>\n",
              "      <td>-58,095.00</td>\n",
              "      <td>1.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>2.18</td>\n",
              "      <td>55.50</td>\n",
              "      <td>-27,343.00</td>\n",
              "      <td>4.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>3.48</td>\n",
              "      <td>76.20</td>\n",
              "      <td>-11,329.00</td>\n",
              "      <td>5.86</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>4.67</td>\n",
              "      <td>93.98</td>\n",
              "      <td>1,283.00</td>\n",
              "      <td>8.41</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>15.84</td>\n",
              "      <td>137.63</td>\n",
              "      <td>11,130.00</td>\n",
              "      <td>18.55</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0b0d0d74-5ce2-422c-8baa-c7f82440bedf')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0b0d0d74-5ce2-422c-8baa-c7f82440bedf button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0b0d0d74-5ce2-422c-8baa-c7f82440bedf');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4917f697-69a5-4e42-a664-3b10fed50e30\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4917f697-69a5-4e42-a664-3b10fed50e30')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4917f697-69a5-4e42-a664-3b10fed50e30 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"d2\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"GDP Growth (anual %)\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"3.09\",\n          \"3.48\",\n          \"97.00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Trade (% of GDP)\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"75.81\",\n          \"76.20\",\n          \"97.00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Net Migration\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"-14,087.39\",\n          \"-11,329.00\",\n          \"97.00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total Unemployment\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"6.60\",\n          \"5.86\",\n          \"97.00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Analize the data..."
      ],
      "metadata": {
        "id": "fzuSLX3TrW--"
      }
    }
  ]
}